{"version":3,"sources":["assets/fire.jpg","slideshow.js","map.js","wether.js","tbarka.js","App.js","reportWebVitals.js","index.js"],"names":["onoffline","GoogleMaps","google","this","props","zoom","style","mapStyles","initialCenter","lat","lng","position","Component","defaultProps","center","width","height","GoogleApiWrapper","apiKey","Wether","useOpenWeather","key","lon","lang","unit","data","isLoading","errorMessage","theme","fontFamily","gradientStart","gradientMid","gradientEnd","locationFontColor","todayTempFontColor","todayDateFontColor","todayRangeFontColor","todayDescFontColor","todayInfoFontColor","todayIconColor","forecastBackgroundColor","forecastSeparatorColor","forecastDateColor","forecastDescColor","forecastRangeColor","forecastIconColor","forecast","locationLabel","city","unitsLabels","temperature","windSpeed","showForecast","Tabarka","className","href","src","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAAe,I,gCCWFA,U,kDCLPC,E,4JASJ,WACE,OAII,cAAC,MAAD,CAOAC,OAAQC,KAAKC,MAAMF,OACrBG,KAAM,EACJC,MAAOC,EACPC,cAAe,CAAEC,IAAK,iBAAkBC,IAAK,mBAV7C,SAYE,cAAC,SAAD,CAEVC,SAAU,CAENF,IAAK,kBAELC,IAAK,oBANa,kB,GA1BGE,aAAnBX,EACGY,aAAe,CACpBC,OAAQ,CACNL,IAAK,MACLC,IAAK,MAEPL,KAAM,GA4CV,IAAME,EAAY,CACdQ,MAAO,MACPC,OAAQ,OAKGC,6BAAiB,CAC5BC,OAAQ,2CADGD,CAEVhB,G,gBCbckB,EAjDJ,WACb,IAwBE,EAA0CC,yBAAe,CACrDC,IAAK,mCACLZ,IAAK,qBACLa,IAAK,oBACLC,KAAM,KACNC,KAAM,WALFC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,aAOvB,OACE,cAAC,IAAD,CACAC,MAjCe,CACnBC,WAAa,wBACbC,cAAgB,UAChBC,YAAc,UACdC,YAAc,UACdC,kBAAoB,OACpBC,mBAAqB,OACrBC,mBAAqB,UACrBC,oBAAsB,UACtBC,mBAAqB,UACrBC,mBAAqB,UACrBC,eAAiB,OACjBC,wBAA0B,OAC1BC,uBAAyB,OACzBC,kBAAoB,OACpBC,kBAAoB,OACpBC,mBAAqB,OACrBC,kBAAoB,WAiBhBC,SAAS,QAEPpB,UAAWA,EACXC,aAAcA,EACdF,KAAMA,EACNF,KAAK,KACLwB,cAAc,UACdC,KAAK,UACLC,YAAa,CAAEC,YAAa,IAAKC,UAAW,QAC5CC,cAAY,KCYPC,EArDC,WACZ,OAEA,sBAAKC,UAAU,aAAf,UACA,sBAAKA,UAAU,WAAf,UACA,mBAAGA,UAAU,WAAYC,KAAK,IAA9B,sBACU,mBAAGD,UAAU,WAAWC,KAAK,IAA7B,uBACA,mBAAGD,UAAU,WAAWC,KAAK,IAA7B,4BAOR,sBAAKD,UAAU,aAAf,UAEQ,mBAAGA,UAAU,WAAYC,KAAK,IAA9B,yBACA,mBAAGD,UAAU,WAAWC,KAAK,IAA7B,yBACA,mBAAGD,UAAU,WAAWC,KAAK,IAA7B,4BAGR,qBAAKD,UAAU,YAAf,4BAGA,qBAAKA,UAAW,UAAhB,SAED,qBAAKE,IAAK,4DAA+DxC,OAAO,YAG/E,qBAAKsC,UAAU,cAAf,yPAID,sBAAKA,UAAU,OAAf,UACI,2CAEA,cAAC,EAAD,OAMJ,sBAAKA,UAAU,SAAf,UACI,0CACJ,cAAC,EAAD,W,MC3BUG,MAdf,WACE,OACE,8BAGC,cAAC,EAAD,OCFUC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d3540af4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/fire.32b3d455.jpg\";","import './slideshow.css';\r\nimport { Slide } from 'react-slideshow-image';\r\nimport 'react-slideshow-image/dist/styles.css'\r\n\r\n\r\n\r\n\r\nconst proprietes = {\r\n    duration: 3000,\r\n    transitionDuration: 500,\r\n    indicators : true,\r\n    arrows : onoffline,\r\n    slidesToShow: 5,\r\n    slidesToScroll: 1,\r\n    \r\n}\r\n\r\nconst Slideshow = () => {\r\n    return (\r\n        <div className=\"containerSlide\">\r\n            <Slide {...proprietes}>\r\n                <div className=\"each-slide1\">\r\n                    <div>\r\n                        <img src={\"https://contents.mediadecathlon.com/p1757596/k$5f6afde636ebc761b055f38fb88e1db0/table-de-camping-pliante-4-tabourets-4-a-6-personnes.jpg?&f=800x800\"} alt=\"img1\" />\r\n                    </div>\r\n                   \r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"each-slide\">\r\n                    <div>\r\n                        <img src={\"https://contents.mediadecathlon.com/p1897276/k$2930cc545cc52a420a31468bc0ab5274/tente-a-arceaux-de-camping-arpenaz-41-4-personnes-1-chambre.jpg?&f=452x452\"} alt=\"img2\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"each-slide\">\r\n                    <div>\r\n                        <img src={\"https://contents.mediadecathlon.com/p1749361/k$96ca9266b4a34d7c1099b146f89eb230/fauteuil-pliable-pour-le-camping-basic.jpg?&f=452x452\"} alt=\"img3\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"each-slide\">\r\n                    <div>\r\n                        <img src={\"https://m.media-amazon.com/images/I/41XyTBC00kL.jpg\"} alt=\"img3\" />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </Slide>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Slideshow;","import React, { Component } from 'react';\r\n\r\nimport { Map, GoogleApiWrapper,Marker } from 'google-maps-react';\r\n\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n\r\nclass GoogleMaps extends Component {\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 36.98,\r\n      lng: 9.58\r\n    },\r\n    zoom: 9\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        \r\n\r\n     \r\n        <Map \r\n         \r\n \r\n\r\n        \r\n\r\n\r\n        google={this.props.google}\r\n      zoom={8}\r\n        style={mapStyles}\r\n        initialCenter={{ lat: 36.9887255271239, lng: 9.085931209365622}}\r\n      >\r\n          <Marker key=\"marker_1\"\r\n\r\nposition={{\r\n\r\n    lat: 36.85055133881499,\r\n\r\n    lng: 8.770625470534904\r\n\r\n}}\r\n\r\n/>\r\n\r\n</Map>\r\n\r\n\r\n    \r\n      \r\n    );\r\n    \r\n  }\r\n\r\n}\r\n\r\n\r\nconst mapStyles = {\r\n    width: '57%',\r\n    height: '60%',\r\n    \r\n    \r\n  }\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyA-TxBW2yWMkY3cDMaQ_YE0_ui9yvrAX70'\r\n  })(GoogleMaps);\r\n\r\n ","\r\nimport ReactWeather, { useOpenWeather } from 'react-open-weather';\r\n\r\nconst Wether = () => {\r\n  const customStyles = {\r\n    fontFamily:  'Helvetica, sans-serif',\r\n    gradientStart:  '#0181C2',\r\n    gradientMid:  '#04A7F9',\r\n    gradientEnd:  '#4BC4F7',\r\n    locationFontColor:  '#FFF',\r\n    todayTempFontColor:  '#FFF',\r\n    todayDateFontColor:  '#B5DEF4',\r\n    todayRangeFontColor:  '#B5DEF4',\r\n    todayDescFontColor:  '#B5DEF4',\r\n    todayInfoFontColor:  '#B5DEF4',\r\n    todayIconColor:  '#FFF',\r\n    forecastBackgroundColor:  '#FFF',\r\n    forecastSeparatorColor:  '#DDD',\r\n    forecastDateColor:  '#777',\r\n    forecastDescColor:  '#777',\r\n    forecastRangeColor:  '#777',\r\n    forecastIconColor:  '#4BC4F7',\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n    const { data, isLoading, errorMessage } = useOpenWeather({\r\n        key: 'a8c7febb46c37d32cee96cb8e7fd1c3f',\r\n        lat: '37.177964772511814',\r\n        lon: '9,351291573708247',\r\n        lang: 'en',\r\n        unit: 'metric', // values are (metric, standard, imperial)\r\n      });\r\n      return (\r\n        <ReactWeather\r\n        theme={customStyles}\r\n        forecast=\"today\"\r\n\r\n          isLoading={isLoading}\r\n          errorMessage={errorMessage}\r\n          data={data}\r\n          lang=\"en\"\r\n          locationLabel=\"Tunisia\"\r\n          city=\"Tabarka\"\r\n          unitsLabels={{ temperature: 'C', windSpeed: 'Km/h' }}\r\n          showForecast\r\n        />\r\n      );\r\n\r\n    }\r\n    export default Wether","import { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport { Map, GoogleApiWrapper,Marker } from 'google-maps-react';\r\nimport './tabarka.css';\r\nimport GoogleMaps from './map';\r\nimport Wether from './wether'\r\n\r\nconst Tabarka = () => {\r\n    return ( \r\n       \r\n    <div className=\"container3\">\r\n    <div className=\"top-menu\">\r\n    <a className=\"bar-item\"  href=\"#\" > GOUV   </a>\r\n              <a className=\"bar-item\" href=\"#\" > SITES   </a>\r\n              <a className=\"bar-item\" href=\"#\" > PLACES    </a>\r\n\r\n      \r\n\r\n\r\n\r\n    </div>\r\n      <div className='right-menu'>\r\n          \r\n              <a className=\"bar-item\"  href=\"#\" > photos    </a>\r\n              <a className=\"bar-item\" href=\"#\" > videos    </a>\r\n              <a className=\"bar-item\" href=\"#\" > pinned    </a>\r\n              \r\n      </div>\r\n      <div className=\"tab-title\">\r\n               Galite,TABARKA\r\n          </div>\r\n      <div className =\"imagess\">\r\n          \r\n     <img src={'https://www.marhba.com/images/experiences/galite_2016.jpg'  } height='700px'  />\r\n     \r\n      </div>\r\n      <div className=\"description\">  \r\n     Probablement le spot de camping le plus convoité ! Galite est un archipel constitué d’un ensemble d'îles rocheuses.\r\n      L’endroit, calme et idyllique, offre un moment de détente et de tranquillité pour les campeurs\r\n     </div>\r\n     <div className=\"maps\">\r\n         <p> location </p>\r\n         \r\n         <GoogleMaps />\r\n        \r\n    \r\n \r\n     </div>\r\n     \r\n     <div className=\"wether\">\r\n         <p> weather </p>\r\n     <Wether />\r\n     </div>\r\n\r\n    \r\n </div>\r\n\r\n     );\r\n}\r\n \r\nexport default Tabarka;","import Section2 from './section2';\nimport react from 'react';\nimport React, { Component } from 'react';\nimport Page2 from './page2';\nimport Images from './images';\nimport Tabarka from './tbarka';\n\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\nimport Wether from './wether';\nfunction App() {\n  return (\n    <div>\n \n      \n     <Tabarka />\n     \n\n\n    \n    </div>\n  );\n}\n\nexport default App;\n    /*<Page2 />*/\n\n  /*<Section2 />*/\n  \n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}